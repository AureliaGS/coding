// Copyright (c) 2014 by Boris van Schooten tmtg.net boris@13thmonkey.org
// Released under BSD license. See LICENSE for details.

// max 200+ letters
var _drawtextcoords = new Float32Array(200*7*4);

function drawText(text,x,y,xsize,ysize,thickness,color,align,amplitude) {
	var xamp = amplitude*0.6;
	var yamp = amplitude;
	//var coords = [];
	var idx=0;
	var xpos = x;
	if (align==1) xpos -= (xsize*2.5)*text.length;
	if (align==0) xpos -= (xsize*1.25)*text.length - xsize;
	for (var i=0; i<text.length; i++) {
		var ch = text.charCodeAt(i);
		if (ch<=32 || ch>=96) {
			// treat as space
			xpos += xsize*2.5;
			continue;
		}
		var letter = letters[ch-32];
		//var letterxofs = amplitude==0 ? 0 : amplitude*Math.sin(0.045*xpos + 0.049*y + 0.14*gametime);
		//var letteryofs = amplitude==0 ? 0 : amplitude*Math.sin(0.04*xpos + 0.046*y + 0.2*gametime);
		for (var j=0; j<letter.length; j++) {
			var p1 = letter[j]&0x0f;
			var p2 = (letter[j]&0xf0)>>4;
			var xx = xpos + xsize*letterpos[2*p1];
			var yy = y    + ysize*letterpos[2*p1+1];
			_drawtextcoords[idx++]= xx + xamp*Math.sin(0.01*xx+0.006*yy + 0.1*gametime);
			_drawtextcoords[idx++]= yy + yamp*Math.cos(0.012*xx+0.008*yy + 0.13*gametime);
			xx = xpos + xsize*letterpos[2*p2];
			yy = y    + ysize*letterpos[2*p2+1];
			_drawtextcoords[idx++]= xx + xamp*Math.sin(0.01*xx+0.006*yy + 0.1*gametime);
			_drawtextcoords[idx++]= yy + yamp*Math.cos(0.012*xx+0.008*yy + 0.13*gametime);
		}
		xpos += xsize*2.5;
	}

	gl.enable(gl.BLEND);
	drawLineSegments([0,0], 0, 1.0, thickness, color, _drawtextcoords, idx/4);
	gl.disable(gl.BLEND);
}


var letterpos = [
	//0 1 2
	//3 4 5
	//6 7 8
	//9 A B
	//C D E
	//  F
	-1, -1,     0, -1,     1,   -1, 
	-1, -0.5,   0, -0.5,   1, -0.5, 
	-1,  0,     0,  0,     1,    0, 
	-1,  0.5,   0,  0.5,   1,  0.5, 
	-1,  1,     0,  1,     1,    1,
	            0,  0.8
];

var letters = [
	[], // [spc] 0x20
	[0x1a,0xdf], // !
	[], // "
	[0x21,0x1a,0xac,0xc9,0x97], // #
	[0x20,0x06,0x68,0x8e,0xec,0x1d], // $
	[0x16,0x6d,0x27,0x7e], // % replaced by back arrow
	[], // &
	[0x14], // '
	[], // (
	[], // )
	[], // *
	[], // +
	[0xbd], // ,
	[0x68], // -
	[0xdf], // .
	[0xc2], // / 
	[0x02,0x2e,0xec,0xc0,0x2c], // 0  0x30
	[0x31,0x1d,0xce], // 1
	[0x31,0x15,0x5c,0xce], // 2
	[0x31,0x15,0x57,0x7b,0xbd,0xd9], // 3
	[0xe2,0x29,0x9b], // 4
	[0x20,0x06,0x67,0x7b,0xbd,0xdc], // 5
	[0x21,0x13,0x39,0x9d,0xdb,0xb7,0x76], // 6
	[0x02,0x2d,0x78], // 7
	[0x15,0x13,0x3b,0x59,0xbd,0x9d], // 8
	[0xcd,0xdb,0xb5,0x51,0x13,0x37,0x78], // 9
	[], // :
	[], // ;
	[0x91,0x1b], // <, replaced by life icon
	[0x02,0x2e,0xec,0xc0], // =, replaced by box
	[0x68,0x84,0x8a], // >
	[0x01,0x15,0x57,0x7a,0xdf], // ?
	[], // @
	[0x13,0x15,0x3c,0x5e,0x68], // A (0x41)
	[0x01,0x15,0x57,0x7b,0xbd,0xdc,0xc0], // B
	[0x51,0x13,0x39,0x9d,0xdb], // C
	[0x01,0x15,0x5b,0xbd,0xdc,0xc0], // D
	[0x20,0x0c,0xce,0x67], // E
	[0x20,0x0c,0x67], // F
	[0x21,0x13,0x39,0x9d,0xdb,0xb8,0x87], // G
	[0x0c,0x2e,0x68], // H
	[0x1d], // I
	[0x12,0x2b,0xbd,0xd9], // J
	[0x0c,0x26,0x6e], // K
	[0x0c,0xce], // L
	[0xc0,0x04,0x42,0x2e], // M
	[0xc0,0x0e,0xe2], // N
	[0x15,0x5b,0xbd,0xd9,0x93,0x31], // O
	[0x01,0x15,0x57,0x76,0x0c], // P
	[0x15,0x5b,0xbd,0xd9,0x93,0x31,0xae], // Q
	[0x01,0x15,0x57,0x76,0x0c,0x7b,0xbe], // R
	[0x51,0x13,0x3b,0xbd,0xd9], // S
	[0x02,0x1d], // T
	[0x09,0x9d,0xdb,0xb2], // U
	[0x0d,0xd2], // V
	[0x0c,0xca,0xae,0xe2], // W
	[0x0e,0xc2], // X
	[0x07,0x72,0x7d], // Y
	[0x02,0x2c,0xce], // Z
	[0x10,0x0c,0xcd], // [
	[], // \ 
	[0x12,0x2e,0xed], // ]
	[], // ^
	[], // _
];
